AWSTemplateFormatVersion: "2010-09-09"
Description: Case Study-CF Template-3Tier Architecture.

Parameters:
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    Description: Enter instance size. Default is t2.micro.
  Key:
    Type: String
    Description: The key used to access the instance.
    Default: "general-key"
  VpcCIDR:
    Description: CIDR block for the VPC
    Type: String
    Default: "10.0.0.0/16"
  WebSubnetCIDR:
    Description: CIDR block for the public subnet in the web tier
    Type: String
    Default: "10.0.1.0/24"
  AppSubnetCIDR:
    Description: CIDR block for the private subnet in the application tier
    Type: String
    Default: "10.0.2.0/24"
  DBSubnetCIDR:
    Description: CIDR block for the private subnet in the DB tier
    Type: String
    Default: "10.0.3.0/24"
  DBMasterUsername:
    Description: Username for the RDS DB instance
    Type: String
    Default: "dbadmin"
  DBMasterPassword:
    Description: Password for the RDS DB instance
    Type: String
    NoEcho: true
    Default: "dillibabu422"



# creating resources:
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: cf-vpc
  
  #Creating IGW.
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
       - Key: Name
         Value: cf-igw
      
  #Attaching IGW to VPC.
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  #Creating Subnets.
  PublicWebSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-south-1a
      VpcId: !Ref VPC
      CidrBlock: !Ref WebSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: pub-sub
  
  PrivateAppSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-south-1b
      VpcId: !Ref VPC
      CidrBlock: !Ref AppSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: prv-sub

  PrivateDbSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-south-1b
      VpcId: !Ref VPC
      CidrBlock: !Ref DBSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: db-sub

  #Security Group
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Web Tier
      GroupDescription: Security group for the Web Tier
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: web-SG
      SecurityGroupIngress:
      - IpProtocol: tcp 
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
        
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: App Tier
      GroupDescription: Security group for the Application Tier
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: app-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId: !GetAtt WebSecurityGroup.GroupId

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DB Tier
      GroupDescription: Security group for the Application Tier
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: db-SG
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId: !GetAtt AppSecurityGroup.GroupId

  #Creating RT
  RouteTablePublicAccess:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: pub-RT
  
  RouteTablePrivateAccess:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: pri-RT

  #Adding IGW entry in the RT for allowing the Internet traffic.
  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTablePublicAccess
  
  #Associating the RT with subnet
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePublicAccess
      SubnetId: !Ref PublicWebSubnet
  
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateAccess
      SubnetId: !Ref PrivateAppSubnet

  DBSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivateAccess
      SubnetId: !Ref PrivateDbSubnet

   #Instances creation
  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-south-1a
      ImageId: ami-0f5ee92e2d63afc18
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref Key
      VpcId: !Ref VPC
      SubnetId: !Ref PublicWebSubnet
      SecurityGroupIds: !Ref WebSecurityGroup
  
  AppServer:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: ap-south-1b
      ImageId: ami-0f5ee92e2d63afc18
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref Key
      VpcId: !Ref VPC
      SubnetId: !Ref PrivateAppSubnet
      SecurityGroupIds: !Ref AppSecurityGroup

  RdsInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '5'
      DBInstanceClass: db.t2.micro
      Engine: MySQL
      EngineVersion: "8.0.33"
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !GetAtt DBSecurityGroup.GroupId
  
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet group for RDS"
      SubnetIds:
        - !Ref PrivateDbSubnet
        - !Ref PublicWebSubnet

Outputs:
  WebServerIp:
    Description: WebServer IP
    Value: !Ref WebServer